import asyncHandler from "express-async-handler";
import Food from "../models/foodModel.js"

// @desc Get daily food
// route GET /api/food/daily
// @access Public
const dailyFood = asyncHandler(async (req, res) => {
    try {
        var id = 1; //Change this to random id generated by daily
        await Food.findOne(id);
    } catch (error) {
        res.status(500).json({ error: "Internal server error" });
    }
});


// @desc Add food
// route POST /api/food/addFood
// @access Public
const addFood = asyncHandler(async (req, res) => {
    try {
        const newFood = new Food(req.body);
        await newFood.save();
        res.json(newFood);
    } catch (error) {
        res.status(500).json({ error: "Internal server error" });
    }
});

// @desc Get all foods
// route GET /api/food/all
// @access Public
const getAllFoods = asyncHandler(async (req, res) => {
    try {
        const allFoods = await Food.find();
        res.json(allFoods);
    } catch (error) {
        res.status(500).json({ error: "Internal server error" });
    }
})


// @desc Get specified food
// route GET /api/food/:foodId
// @access Public
const getFood = asyncHandler(async (req, res) => {
    try {
        const foodId = req.params.foodId;
        const foodItem = await Food.findById(foodId);
        if (!foodItem) {
            return res.status(404).json({ error: "Food item not found" });
        }
        res.json(foodItem);
    } catch (error) {
        res.status(500).json({ error: "Internal server error" });
    }
})

export {
    dailyFood,
    addFood,
    getAllFoods,
    getFood
}